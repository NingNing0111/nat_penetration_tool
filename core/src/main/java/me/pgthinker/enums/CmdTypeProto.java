// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: cmd_type.proto

// Protobuf Java Version: 3.25.3
package me.pgthinker.enums;

public final class CmdTypeProto {
  private CmdTypeProto() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  /**
   * <pre>
   * 传输数据的指令类型
   * </pre>
   *
   * Protobuf enum {@code me.pgthinker.message.CmdType}
   */
  public enum CmdType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     * 心跳检测
     * </pre>
     *
     * <code>HEARTBEAT = 0;</code>
     */
    HEARTBEAT(0),
    /**
     * <pre>
     * 认证
     * </pre>
     *
     * <code>AUTH = 1;</code>
     */
    AUTH(1),
    /**
     * <pre>
     * 认证通过
     * </pre>
     *
     * <code>AUTH_OK = 2;</code>
     */
    AUTH_OK(2),
    /**
     * <pre>
     * 认证失败
     * </pre>
     *
     * <code>AUTH_ERR = 3;</code>
     */
    AUTH_ERR(3),
    /**
     * <pre>
     * 连接
     * </pre>
     *
     * <code>CONNECT = 4;</code>
     */
    CONNECT(4),
    /**
     * <pre>
     * 断开连接
     * </pre>
     *
     * <code>DISCONNECT = 5;</code>
     */
    DISCONNECT(5),
    /**
     * <pre>
     * 数据传输
     * </pre>
     *
     * <code>TRANSFER = 6;</code>
     */
    TRANSFER(6),
    /**
     * <pre>
     * 开启代理端口
     * </pre>
     *
     * <code>OPEN_SERVER = 7;</code>
     */
    OPEN_SERVER(7),
    /**
     * <pre>
     * 关闭代理端口
     * </pre>
     *
     * <code>CLOSE_SERVER = 8;</code>
     */
    CLOSE_SERVER(8),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     * 心跳检测
     * </pre>
     *
     * <code>HEARTBEAT = 0;</code>
     */
    public static final int HEARTBEAT_VALUE = 0;
    /**
     * <pre>
     * 认证
     * </pre>
     *
     * <code>AUTH = 1;</code>
     */
    public static final int AUTH_VALUE = 1;
    /**
     * <pre>
     * 认证通过
     * </pre>
     *
     * <code>AUTH_OK = 2;</code>
     */
    public static final int AUTH_OK_VALUE = 2;
    /**
     * <pre>
     * 认证失败
     * </pre>
     *
     * <code>AUTH_ERR = 3;</code>
     */
    public static final int AUTH_ERR_VALUE = 3;
    /**
     * <pre>
     * 连接
     * </pre>
     *
     * <code>CONNECT = 4;</code>
     */
    public static final int CONNECT_VALUE = 4;
    /**
     * <pre>
     * 断开连接
     * </pre>
     *
     * <code>DISCONNECT = 5;</code>
     */
    public static final int DISCONNECT_VALUE = 5;
    /**
     * <pre>
     * 数据传输
     * </pre>
     *
     * <code>TRANSFER = 6;</code>
     */
    public static final int TRANSFER_VALUE = 6;
    /**
     * <pre>
     * 开启代理端口
     * </pre>
     *
     * <code>OPEN_SERVER = 7;</code>
     */
    public static final int OPEN_SERVER_VALUE = 7;
    /**
     * <pre>
     * 关闭代理端口
     * </pre>
     *
     * <code>CLOSE_SERVER = 8;</code>
     */
    public static final int CLOSE_SERVER_VALUE = 8;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static CmdType valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static CmdType forNumber(int value) {
      switch (value) {
        case 0: return HEARTBEAT;
        case 1: return AUTH;
        case 2: return AUTH_OK;
        case 3: return AUTH_ERR;
        case 4: return CONNECT;
        case 5: return DISCONNECT;
        case 6: return TRANSFER;
        case 7: return OPEN_SERVER;
        case 8: return CLOSE_SERVER;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<CmdType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        CmdType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<CmdType>() {
            public CmdType findValueByNumber(int number) {
              return CmdType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return me.pgthinker.enums.CmdTypeProto.getDescriptor().getEnumTypes().get(0);
    }

    private static final CmdType[] VALUES = values();

    public static CmdType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private CmdType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:me.pgthinker.message.CmdType)
  }


  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\016cmd_type.proto\022\024me.pgthinker.message*\213" +
      "\001\n\007CmdType\022\r\n\tHEARTBEAT\020\000\022\010\n\004AUTH\020\001\022\013\n\007A" +
      "UTH_OK\020\002\022\014\n\010AUTH_ERR\020\003\022\013\n\007CONNECT\020\004\022\016\n\nD" +
      "ISCONNECT\020\005\022\014\n\010TRANSFER\020\006\022\017\n\013OPEN_SERVER" +
      "\020\007\022\020\n\014CLOSE_SERVER\020\010B$\n\022me.pgthinker.enu" +
      "msB\014CmdTypeProtoP\000b\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
